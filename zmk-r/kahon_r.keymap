#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define AL1 0
#define AL2 1
#define NUM 2
#define NAV 3
#define SYM 4
#define SHCT 5


/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_e_l: tap_dance_e_l {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp E>, <&kp L>;
        };

        td_i_b: tap_dance_i_b {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp B>;
        };

        td_t_z: tap_dance_t_z {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp T>, <&kp Z>;
        };

        td_o_m: tap_dance_o_m {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp M>;
        };

        td_s_c: tap_dance_s_c {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp S>, <&kp C>;
        };

        td_r_g: tap_dance_r_g {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp R>, <&kp G>;
        };

        td_a_v: tap_dance_a_v {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp V>;
        };

        td_f_x: tap_dance_f_x {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F>, <&kp X>;
        };

        td_p_semi: tap_dance_p_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp P>, <&kp SEMI>;
        };

        td_u_j: tap_dance_u_j {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp J>;
        };

        td_n_k: tap_dance_n_k {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N>, <&kp K>;
        };

        td_h_comma: tap_dance_h_comma {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp H>, <&kp COMMA>;
        };

        td_y_quot: tap_dance_y_quot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Y>, <&kp QUOT>;
        };

        td_w_q: tap_dance_w_q {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp W>, <&kp Q>;
        };

        td_d_dot: tap_dance_d_dot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp D>, <&kp DOT>;
        };
    };

    macros {
        jon: jon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp J &kp O &kp N &kp N9 &kp N9 >
                ;
        };
        arw: arw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MINUS &kp GT >
                ;
        };
        darw: darw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp EQUAL &kp GT >
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                         
                &td_y_quot   &td_u_j    &td_i_b          &td_o_m          &td_p_semi
                &td_w_q   &td_n_k    &td_e_l         &td_s_c      &td_a_v
                &td_d_dot   &td_h_comma    &td_t_z          &td_r_g       &td_f_x           

                &hm LGUI SPACE    &lt NUM BKSP       &tog SYM     &lt NAV DEL     &hm LSHFT RET                               
            >;
        };
        
        // alpha2_layer {
        //     bindings = <
        //         &kp QUOT  &kp   J  &kp B   &kp M &kp  SEMI            
        //         &kp Q   &kp K   &kp L   &kp  C  &kp   V                     
        //         &kp  DOT &kp COMMA  &kp Z   &kp G    &kp   X     

        //         &trans   &trans   &trans   &trans   &trans                  
        //     >;
        // };



        // default_layer {
        //     bindings = <
                         
        //         &kp   P     &kp   O        &kp   I         &kp    U      &kp  F     
        //         &kp  A      &kp N           &kp E           &kp  T         &kp  D
        //        &kp  Y       &kp   S     &kp    H       &kp  R       &kp    W              

        //         &hm LSHFT RET      &lt NAV DEL    &tog SYM  &lt NUM BKSP    &lt AL2 SPACE                   
        //     >;
        // };


        // default_layer {
        //     bindings = <
                         
        //         &kp   F     &kp   A        &kp    R         &kp   W       &kp    P   
        //         &kp   O    &kp     E        &kp  H         &kp   T       &kp  D 
        //        &kp   U         &kp  I      &kp  N          &kp  S          &kp   Y            

        //       &lt AL2 SPACE    &lt NUM BKSP       &tog SYM     &lt NAV DEL     &hm LSHFT RET                
        //     >;
        // };




        number_layer {
            bindings = <
                &kp N6   &kp N7   &kp N8   &kp N9   &kp N0                      
                &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                       
                &kp RET    &kp GRAVE    &sk LGUI     &sk LALT   &sk LCTRL  

                &trans   &trans   &trans   &trans   &trans                  
            >;
        };

        nav_layer {
            bindings = <
               &jon     &kp  TAB   &kp LC(UARW) &kp ESC     &kp K_MUTE                 
                &arw       &kp LC(LARW)       &kp UARW &kp LC(RARW)      &kp K_VOL_UP               
                &darw    &kp LARW       &kp DARW &kp RARW      &kp K_VOL_DN 

                &trans   &trans   &trans   &trans   &trans                  
            >;
        };

        symbol_layer {
            bindings = <
                &kp BSLH   &kp UNDER       &kp PLUS         &kp LT        &kp GT                   
                &kp PIPE  &kp MINUS       &kp EQUAL        &kp LBRC      &kp RBRC                 
                &kp TILDE  &kp FSLH        &kp QMARK       &kp LBKT      &kp RBKT
                &mo SHCT  &kp LGUI       &trans   &trans   &trans           
            >;
        };

        shortcut_layer {
            bindings = <
                &kp LG(LA(R))   &kp LG(R) &kp  LC(R)  &kp   LC(D)   &kp   ESC           
                &kp LG(LS(N5))    &kp  LG(F)     &kp LG(D)         &kp       LG(S)        &kp LG(A)
                &kp LG(SPACE) &kp   LG(V)        &kp LG(Z)          &kp LG(X)  &kp LG(Z)

                  &trans   &bt BT_CLR   &trans    &bt BT_PRV   &bt BT_NXT          
            >;
        };


    };
};
