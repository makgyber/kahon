#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define AL1 0
#define AL2 1
#define NUM 2
#define NAV 3
#define SYM 4
#define SHCT 5


/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        jon: jon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp J &kp O &kp N >
                ;
        };
        arw: arw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MINUS &kp GT >
                ;
        };
        darw: darw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp EQUAL &kp GT >
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                         
                &kp   F     &kp  W         &kp    D         &kp   R        &kp  P      
                &kp   A     &kp  I          &kp   E         &kp   O        &kp  U
               &kp  Y       &kp   S     &kp  T          &kp   H         &kp   N                

                &hm LSHFT RET      &lt NAV DEL    &tog SYM  &lt NUM BKSP    &lt AL2 SPACE                   
            >;
        };
        


        // default_layer {
        //     bindings = <
                         
        //         &kp  F      &kp   O        &kp   I         &kp    U      &kp  P     
        //         &kp  A      &kp    T        &kp E           &kp   N        &kp  D
        //        &kp  Y       &kp   S     &kp    H       &kp  R       &kp    W              

        //         &hm LSHFT RET      &lt NAV DEL    &tog SYM  &lt NUM BKSP    &lt AL2 SPACE                   
        //     >;
        // };

        alpha2_layer {
            bindings = <
                &kp SEMI   &kp M   &kp B   &kp J  &kp QUOT                      
                &kp V   &kp C   &kp L   &kp K   &kp Q                       
                &kp X   &kp DOT   &kp Z   &kp COMMA   &kp  G

                &trans   &trans   &trans   &trans   &trans                  
            >;
        };

        number_layer {
            bindings = <
                &kp N6   &kp N7   &kp N8   &kp N9   &kp N0                      
                &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                       
                &sk LCTRL   &sk LALT   &sk LGUI   &kp GRAVE   &kp RET      

                &trans   &trans   &trans   &trans   &trans                  
            >;
        };

        nav_layer {
            bindings = <
                &kp K_MUTE   &kp ESC       &kp LC(UARW) &kp TAB   &jon                     
                &kp K_VOL_UP   &kp LC(LARW)       &kp UARW &kp LC(RARW)  &arw                       
                &kp K_VOL_DN   &kp LARW       &kp DARW &kp RARW   &darw     

                &trans   &trans   &trans   &trans   &trans                  
            >;
        };

        symbol_layer {
            bindings = <
                &kp BSLH   &kp UNDER       &kp PLUS         &kp LT        &kp GT                   
                &kp PIPE  &kp MINUS       &kp EQUAL        &kp LBRC      &kp RBRC                 
                &kp TILDE  &kp FSLH        &kp QMARK       &kp LBKT      &kp RBKT
                &trans   &trans   &trans   &kp LGUI   &mo SHCT               
            >;
        };

        shortcut_layer {
            bindings = <
                &kp ESC    &kp LC(D)   &kp LC(R)   &kp LG(R)   &kp LG(LA(R))                
                &kp LG(A)  &kp LG(S)       &kp LG(D)         &kp LG(F)   &kp LG(LS(N5))            
                &kp LG(Z) &kp  LG(X)        &kp LG(Z)          &kp LG(V)   &kp LG(SPACE)

                &bt BT_PRV   &bt BT_NXT   &trans   &bt BT_CLR   &trans                  
            >;
        };


    };
};
